---
import { Image } from "astro:assets";

interface Tech {
  name: string;
  url: ImageMetadata;
}

interface Props {
  items: Tech[];
}

const { items } = Astro.props;
---

<div class="scroller">
  <ul class="scroller__inner m-0 flex flex-wrap gap-4 px-0 py-4">
    {
      items.map((item) => (
        <li class="pointer-events-none flex flex-col items-center rounded-md bg-indigo-800 p-4 text-indigo-100 shadow-sm">
          <Image
            src={item.url}
            alt={`${item.name} logo`}
            width={48}
            class="text-rose-500"
          />
          <span>{item.name}</span>
        </li>
      ))
    }
  </ul>
</div>

<style>
  .scroller[data-animated="true"] {
    overflow: hidden;
    mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
  }
  .scroller[data-animated="true"] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    --amount: -50%;
    animation: scroll 120s forwards linear infinite;
  }
  :root[lang="ar"] .scroller .scroller__inner {
    --amount: 50%;
  }
  @keyframes scroll {
    to {
      transform: translate(calc(var(--amount) - 0.5rem));
    }
  }
</style>

<script>
  const scrollers = document.querySelectorAll(".scroller");

  // If a user hasn't opted in for recuded motion, then we add the animation
  if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
    addAnimation();
  }
  function addAnimation() {
    scrollers.forEach((scroller) => {
      // add data-animated="true" to every `.scroller` on the page
      scroller.setAttribute("data-animated", "true");

      // Make an array from the elements within `.scroller-inner`
      const scrollerInner = scroller.querySelector(".scroller__inner")!;
      const scrollerContent = Array.from(scrollerInner.children);

      // For each item in the array, clone it
      // add aria-hidden to it
      // add it into the `.scroller-inner`
      scrollerContent.forEach((item) => {
        const duplicatedItem = item.cloneNode(true);
        // @ts-ignore
        duplicatedItem.setAttribute("aria-hidden", "true");
        scrollerInner.appendChild(duplicatedItem);
      });
    });
  }
</script>
